package bucket;


import java.util.ArrayList;
import java.util.Collections;

public class BucketSort implements Sorting {

    @Override
    public void sort(int[] arr, int n) {

        if (n <= 0)
            return;

        /**
         * –≠—Ç–∞ —à—Ç—É–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞,
         * —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
         */
        @SuppressWarnings("unchecked")
        ArrayList<Integer>[] bucket = new ArrayList[n];

        /**
         *  –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –≤–µ–¥–µ—Ä–∫–∏(–∫–æ—Ä–∑–∏–Ω—ã)
         */
        for (int i = 0; i < n; i++)
            bucket[i] = new ArrayList<>();

        /**
         * –û—Ç—ã—â–µ–º –º–∏–Ω–∏–º—É–º –∏ –º–∞–∫—Å–∏–º—É–º
         */
        int maxVal = arr[0];
        int minVal =  arr[0];

        for(int i = 1; i < n; i++){
            if(arr[i] > maxVal){
                maxVal = arr[i];
            }
            if(arr[i] < minVal){
                minVal = arr[i];
            }
        }

        double range = maxVal - minVal;
        /**
         * –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ—Ä–∑–∏–Ω—É.
         */
        for (int i = 0; i < n; i++) {
            int bucketIndex = (int) Math.floor((arr[i] - minVal) / range * (n - 1));
            bucket[bucketIndex].add(arr[i]);
        }

        /**
         * –ò—Å–ø–æ–ª—å–∑—É–µ–º –±—ã—Å—Ç—Ä—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ—Ä–∑–∏–Ω—ã.
         * –¢–∞–∫ –∂–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ,
         * –Ω–æ —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å–∞–∂–∏–≤–∞–µ–º—Å—è –ø–æ –ø–∞–º—è—Ç–∏
         */
        for (int i = 0; i < n; i++) {
            Collections.sort((bucket[i]));
        }

        /**
         * –°–æ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤—á–∏–∫ü§óü§óü§ó
         */
        int index = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0, size = bucket[i].size(); j < size; j++) {
                arr[index++] = bucket[i].get(j);
            }
        }
    }
}
